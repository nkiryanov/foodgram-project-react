name: production backend build and deploy

on:
  push:
    branches:
      - master

defaults:
  run:
    working-directory: backend

jobs:
  tests_and_coverage:
    name: Check codestyle, run test and upload Coverage Report
    runs-on: ubuntu-latest
    steps:
    -
      name: Check out the repo
      uses: actions/checkout@v2
    -
      name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    -
      name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements/dev.txt
    -
      name: Lint with flake8
      run: flake8 .
    -
      name: Codestyle by black
      run: black --check .
    -
      name: Test with pytest
      run: pytest
    -
      name: Generate Report
      run: |
        coverage run --source='foodgram' -m pytest
    -
      name: Upload Coverage to Codecov
      uses: codecov/codecov-action@v1

  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests_and_coverage
    steps:
      -
        name: Check out the repo
        uses: actions/checkout@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          context: backend
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram-backend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    environment: production_environment
    steps:
      -
        name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd ${{ github.event.repository.name }}
            git pull

            mkdir -p .envs/
            touch .envs/.swag
            echo PUID=$(id -u) > .envs/.swag
            echo PGID=$(id -g) >> .envs/.swag
            echo URL=${{ secrets.SITE_URL }} >> .envs/.swag
            echo CERTPROVIDER=zerossl >> .envs/.swag
            echo EMAIL=${{ secrets.SSL_EMAIL }} >> .envs/.swag

            docker pull ${{ secrets.DOCKER_USERNAME }}/bbbs-backend:latest
            docker-compose down
            docker-compose up -d
            docker-compose exec -d django python manage.py makemigrations --noinput
            docker-compose exec -d django python manage.py migrate --noinput
            docker-compose exec -d django python manage.py collectstatic --noinput
